{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "defaultValue": "[resourceGroup().location]",
            "type": "string",
            "metadata": {
                "description": "region of resources"
            }
        },
        "newStorageAccount": {
            "type": "string",
            "metadata": {
                "description": "Globally unique lowercase name of your storage account"
            }
        },
        "storageAccountType": {
            "type": "string",
            "metadata": {
                "description": "The type of the Storage Account created"
            },
            "defaultValue": "Standard_LRS"
        },
        "storageAccountNewOrExisting": {
            "type": "string",
            "defaultValue": "new",
            "allowedValues": [
                "new",
                "existing"
            ],
            "metadata": {
                "Description": "Indicates whether the Storage Account is new or existing"
            }
        },
        "existingStorageAccountRG": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                "description": "Storage Resource Group of the Existing VM."
            }
        },
        "dnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "Globally unique DNS name to access management interface of VM-Series firewall"
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name of VM-Series VM in the Azure portal"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "Username for VM-Series administrator"
            }
        },
        "authenticationType": {
        "type": "string",
        "defaultValue": "password",
        "allowedValues": [
            "sshPublicKey",
            "password"
        ],
        "metadata": {
            "description": "Type of authentication to use on the Virtual Machine. SSH key is recommended."
        }
        },
        "adminPasswordOrKey": {
        "type": "secureString",
        "metadata": {
            "description": "SSH Key or password for the Virtual Machine. SSH key is recommended."
        }
        },
        "imageVersion": {
            "type": "string",
            "defaultValue": "latest",
            "allowedValues": [
                "9.1.10",
                "10.0.6",
                "10.1.0",
                "latest"
            ],
            "metadata": {
                "description": "PAN-OS version."
            }
        },
        "imageSku": {
            "type": "string",
            "defaultValue": "byol",
            "allowedValues": [
                "byol",
                "bundle1",
                "bundle2",
                "bundle3"
            ],
            "metadata": {
                "description": "VM-Series model: BYOL or hourly pay-as-you-go (PAYG): Bundle 1, Bundle 2, Bundle 3"
            }
        },
        "vmSize": {
            "defaultValue": "Standard_DS3_v2",
            "allowedValues": [
                "Standard_D3_v2",
                "Standard_D4_v2",
                "Standard_D5_v2",
                "Standard_D4_v3",
                "Standard_DS3_v2",
                "Standard_DS4_v2",
                "Standard_DS5_v2",
                "Standard_D8_v3",
                "Standard_D16_v3",
                "Standard_D8s_v3",
                "Standard_D16s_v3",
                "Standard_F8s_v2",
                "Standard_F32s_v2",
                "Standard_D8_v4",
                "Standard_D16_v4",
                "Standard_D8s_v4",
                "Standard_D16s_v4"
            ],
            "type": "String",
            "metadata": {
                "description": "Azure VM size for VM-Series"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": "VMSeriesFwAvSet",
            "metadata": {
                "description": "Azure Availability Set for VM-Series firewalls"
            }
        },
        "srcIPInboundNSG": {
            "type": "string",
            "metadata": {
                "description": "Your source public IP address. Added to the restrict inbound DefaultNSG on eth0 (MGMT)"
            },
            "defaultValue": "0.0.0.0/0"
        },
        "baseUrl": {
            "type": "string",
            "metadata": {
                "artifactsBaseUrl": ""
            },
            "defaultValue": "https://raw.githubusercontent.com/mlogue55/pan-vmseries-azure/master/vmseries-avset"
        },
        "virtualNetworkName": {
            "type": "string",
            "metadata": {
                "description": "Name of the virtual network that the consumer wants to use"
            },
            "defaultValue": "panVnet"
        },
        "virtualNetworkAddressPrefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/16",
            "metadata": {
                "description": "Virtual network address CIDR"
            }
        },
        "subnet0Name": {
            "type": "string",
            "defaultValue": "Mgmt",
            "metadata": {
                "description": "Subnet for the Mgmt"
            }
        },
        "subnet1Name": {
            "type": "string",
            "defaultValue": "Untrust",
            "metadata": {
                "description": "Subnet for the Untrust"
            }
        },
        "subnet2Name": {
            "type": "string",
            "defaultValue": "Trust",
            "metadata": {
                "description": "Subnet for the Trust"
            }
        },
        "subnet0Prefix": {
            "type": "string",
            "defaultValue": "192.168.0.0/24",
            "metadata": {
                "description": "Mgmt subnet CIDR"
            }
        },
        "subnet1Prefix": {
            "type": "string",
            "defaultValue": "192.168.1.0/24",
            "metadata": {
                "description": "Untrust subnet CIDR"
            }
        },
        "subnet2Prefix": {
            "type": "string",
            "defaultValue": "192.168.2.0/24",
            "metadata": {
                "description": "Trust subnet CIDR"
            }
        },
        "subnet0StartAddress": {
            "type": "string",
            "defaultValue": "192.168.0.4",
            "metadata": {
                "description": "Mgmt subnet start address"
            }
        },
        "subnet1StartAddress": {
            "type": "string",
            "defaultValue": "192.168.1.4",
            "metadata": {
                "description": "Untrust subnet start address"
            }
        },
        "subnet2StartAddress": {
            "type": "string",
            "defaultValue": "192.168.2.4",
            "metadata": {
                "description": "Trust subnet start address"
            }
        },
        "availabilitySetPlatformFaultDomainCount": {
            "defaultValue": "2",
            "type": "String"
        },
        "availabilitySetPlatformUpdateDomainCount": {
            "defaultValue": "5",
            "type": "String"
        }
    },
    "variables": {
        "apiVersion": "2015-06-15",
        "imagePublisher": "paloaltonetworks",
        "imageOffer": "vmseries-flex",
        "fwpublicIPName": "[concat(parameters('vmName'), '-fwMgmtPublicIP')]",
        "nicName": "[concat(parameters('vmName'), '-eth')]",
        "FWPrivateIPAddressManagement": "[parameters('subnet0StartAddress')]",
        "FWPrivateIPAddressUntrust": "[parameters('subnet1StartAddress')]",
        "FWPrivateIPAddressTrust": "[parameters('subnet2StartAddress')]",
        "publicIPAddressType": "Dynamic",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "nsgname-mgmt": "[concat(parameters('vmName'), '-DefaultNSG')]",
        "subnet0Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet0Name'))]",
        "subnet1Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet1Name'))]",
        "subnet2Ref": "[concat(variables('vnetID'),'/subnets/',parameters('subnet2Name'))]",
        "storageAccountSetupURL": "[concat(parameters('baseUrl'),'/storageAccount-',parameters('storageAccountNewOrExisting'),'.json')]",
        //"vmTemplateUrl": "[concat(parameters('baseUrl'), '/virtual-machine-', parameters('authenticationType'),'.json')]",
        "linuxConfiguration": {
            "disablePasswordAuthentication": true,
            "ssh": {
                "publicKeys": [
                    {
                        "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                        "keyData": "[parameters('adminPasswordOrKey')]"
                    }
                ]
            }
        }
    },
    "resources": [
        {
            "name": "storageAcountSetup",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2015-01-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('storageAccountSetupURL')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "storageAccountType": {
                        "value": "[parameters('storageAccountType')]"
                    },
                    "newStorageAccount": {
                        "value": "[parameters('newStorageAccount')]"
                    },
                    "storageAccountExistingRG": {
                        "value": "[parameters('existingStorageAccountRG')]"
                    }
                }
            }
        },
        {
            "apiVersion": "2018-06-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[parameters('availabilitySetName')]",
            "location": "[resourceGroup().location]",
            "sku": {
                "name": "aligned"
            },
            "properties": {
                "platformFaultDomainCount": "[parameters('availabilitySetPlatformFaultDomainCount')]",
                "platformUpdateDomainCount": "[parameters('availabilitySetPlatformUpdateDomainCount')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('fwpublicIPName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[concat(parameters('vmName'), '-DefaultNSG')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": [
                    {
                        "name": "Allow-Outside-From-IP",
                        "properties": {
                            "description": "Rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[parameters('srcIPInboundNSG')]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Allow-Intra",
                        "properties": {
                            "description": "Allow intra network traffic",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "[concat(parameters('virtualNetworkAddressPrefix'))]",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Default-Deny",
                        "properties": {
                            "description": "Default-Deny if we don't match Allow rule",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 200,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', variables('nsgname-mgmt'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('virtualNetworkAddressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('subnet0Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet0Prefix')]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgname-mgmt'))]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('subnet1Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet1Prefix')]"
                        }
                    },
                    {
                        "name": "[parameters('subnet2Name')]",
                        "properties": {
                            "addressPrefix": "[parameters('subnet2Prefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '0')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/publicIPAddresses/', variables('fwpublicIPName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '0')]"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '0')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressManagement')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPName'))]"
                            },
                            "subnet": {
                                "id": "[variables(concat('subnet','0','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '1')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '1')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressUntrust')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','1','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[concat(variables('nicName'), '2')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "[concat('NetworkInterfaces', '2')]"
            },
            "properties": {
                "enableIPForwarding": true,
                "ipConfigurations": [
                    {
                        "name": "[concat('ipconfig', '2')]",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[variables('FWPrivateIPAddressTrust')]",
                            "subnet": {
                                "id": "[variables(concat('subnet','2','Ref'))]"
                            }
                        }
                    }
                ]
            }
        },
//         {
//             "name": "PAN-VM",
//             "type": "Microsoft.Resources/deployments",
//             "apiVersion": "2015-01-01",
//             "dependsOn": [
//                 "storageAcountSetup1",
//                 "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '0')]",
//                 "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '1')]",
//                 "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'), '2')]"
//             ],
//             "properties": {
//                 "mode": "Incremental",
//                 "templateLink": {
//                     "uri": "[variables('vmTemplateUrl')]",
//                     "contentVersion": "1.0.0.0"
//                 },
//                 "parameters": {
//                     "location": {
//                         "value": "[parameters('location')]"
//                     },
//                     "vmName": {
//                         "value": "[parameters('vmName')]"
//                     },
//                     "imageSku": {
//                         "value": "[parameters('imageSku')]"
//                     },
//                     "imageOffer": {
//                         "value": "[variables('imageOffer')]"
//                     },
//                     "imageVersion": {
//                         "value": "[parameters('imageVersion')]"
//                     },
//                     "imagePublisher": {
//                         "value": "[variables('imagePublisher')]"
//                     },
//                     "nicName": {
//                         "value": "[variables('nicName')]"
//                     },
//                     "vmSize": {
//                         "value": "[parameters('vmSize')]"
//                     },
//                     "adminUserName": {
//                         "value": "[parameters('adminUserName')]"
//                     },
//                     "adminPassword": {
//                         "value": "[parameters('adminPassword')]"
//                     },
//                     "newStorageAccount": {
//                         "value": "[parameters('newStorageAccount')]"
//                     },
//                     "sshKey": {
//                         "value": "[parameters('sshKey')]"
//                     },
//                     "availabilitySetName": {
//                         "value": "[parameters('availabilitySetName')]"
//                     }
//                 }
//             }
//         }
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2018-06-01",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses', variables('fwpublicIPName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
                "[resourceId('Microsoft.Network/networkSecurityGroups', variables('nsgName-mgmt'))]",
                "[concat(variables('nicName'), '0')]",
                "[concat(variables('nicName'), '1')]",
                "[concat(variables('nicName'), '2')]",
                "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
            ],
            //"zones": "[if(equals(parameters('zone'), 'None'), json('null'), variables('zones'))]",
            "plan": {
                "name": "[parameters('imageSku')]",
                "product": "[variables('imageOffer')]",
                "publisher": "[variables('imagePublisher')]"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPasswordOrKey')]",
                    "linuxConfiguration": "[if(equals(parameters('authenticationType'), 'password'), json('null'), variables('linuxConfiguration'))]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[parameters('imageSku')]",
                        "version": "[parameters('imageVersion')]"
                    },
                    "osDisk": {
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'0'))]",
                            "properties": {
                                "primary": true
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'1'))]",
                            "properties": {
                                "primary": false
                            }
                        },
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('nicName'),'2'))]",
                            "properties": {
                                "primary": false
                            }
                        }
                    ]
                },
                "availabilitySet": "[if(equals(parameters('availabilitySetName'), 'None'), json('null'), parameters('availabilitySetName'))]"
            }
        }
    ]
}
